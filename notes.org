* Cloud Fundamentals
** What defines Cloud Computing?
   - On-Demand Self-Service
     Provision and terminate using a UI/CLI without human interaction
   - Broad Network Access
     Access services over any networks, on any devices, using standard
     protocols and methods
   - Resource Pooling
     Economies of scale, cheaper service
   - Rapid Elasticity
     Scale up and down automatically in response to system load
   - Mesured Service
     Usage is measured. Pay for what you consume

** Public vs Private vs Multi vs Hybrid
   - Public Cloud :: using *1* public cloud
   - Private Cloud :: using on-premises *real* cloud
   - Multi-Cloud :: using *more than 1* public cloud
   - Hybrid Cloud :: *Public* and *Private* clouds    

      /Note/: Hybrid Cloud is *NOT* public cloud + legacy on-premises

** Service Models (Cloud Service Models)
   - An Infrastructure Stack is a collection of things which that
     application needs
     - Application
     - Data
     - Runtime
     - Container
     - O/S
     - Virtualization
     - Servers
     - Infrastructre
     - Facilities
   - For every service and application there is a part of
     the stack that is managed by you and part that is managed
     by the provider
   - Unit of Consumpution is what you pay for and consume. It's the
     part of the system where from that point upwards in the
     infrastructure stack, you are responsible for managmement
     
** Infrastructure and Resiliency
   
   Services can be described as having one of three resiliency types
   - Global Resilience
     - A service that operates globally with a single database. It's one
       product and it's data is replicated across multiple regions inside
       AWS (ex. IAM, Route53)
   - Regional Resilience
     - Services which operate in a single region with one set of data per region
       - If the region fails, then the entire service fails
   - Zone Resilience
     Services run from a single Availability Zone

     - The AWS Global Infrastructure is divided into
     - AWS Regions
       These are full deployments of AWS infrastructure
     - AWS Edge Locations
       - Smaller than regions
       - Content Distribution Services
       - Some types of Edge Computing
       - Many more locations

   - Global Services don't reside in a region so you don't choose one
     in the dropdown

   - Region Benefits
     - Geographically Separate
       This provides isolated fault tolerance
     - Geopolitical Separations
       Difference governance
     - Locaton Control(performance)

   - Naming Examples
     - Region Name Example: Asia Pacific (Sydney)  
     - Region Code Example: =ap-southeast-2=
     - Availability Zone:   =ap-southeast-2a=, =ap-southeast-2b=

   - Availability Zones
     - Each region contains multiple (2 or more) AZs
     - AZs provide isolated infrastructure inside a region
       - Isolated compute, storage, networking, power, and facilities
     - High-speed low-latency across AZs
     - VPCs can span across AZs to provide resiliency


* Networking

** Domain Name System (DNS)


* AWS Features

** Shared Responsibility Model

** High-Availability vs Fault-Tolerance vs Disaster Recovery

** AWS Public vs Private Services
  - Public Cloud :: using *1* public cloud
  - Private Cloud :: using on-premises *real* cloud
  - Multi-Cloud :: using *more than 1* public cloud
  - Hybrid Cloud :: *Public* and *Private* clouds    

  /Note/: Hybrid Cloud is *NOT* public cloud + legacy on-premises

** AWS Global Infrastructure
  Services can be described as having one of three resiliency types
  - Global Resilience
    - A service that operates globally with a single database. It's one
      product and it's data is replicated across multiple regions inside
      AWS (ex. IAM, Route53)
  - Regional Resilience
    - Services which operate in a single region with one set of data
      per region
      - If the region fails, then the entire service fails
  - Zone Resilience
    Services run from a single Availability Zone

  - The AWS Global Infrastructure is divided into
    - AWS Regions
      These are full deployments of AWS infrastructure
    - AWS Edge Locations
      - Smaller than regions
      - Content Distribution Services
      - Some types of Edge Computing
      - Many more locations

  - Global Services don't reside in a region so you don't choose one
    in the dropdown

  - Region Benefits
    - Geographically Separate
      This provides isolated fault tolerance
    - Geopolitical Separations
      Difference governance
    - Locaton Control(performance)

  - Naming Examples
    - Region Name Example: Asia Pacific (Sydney)  
    - Region Code Example: =ap-southeast-2=
    - Availability Zone:   =ap-southeast-2a=, =ap-southeast-2b=

  - Availability Zones
    - Each region contains multiple (2 or more) AZs
    - AZs provide isolated infrastructure inside a region
      - Isolated compute, storage, networking, power, and facilities
    - High-speed low-latency across AZs
    - VPCs can span across AZs to provide resiliency


* Default Virtual Public Cloud (VPC)

** Default VPC Facts
   - One per region - can be removed and recreated so it's possible to
     not have a Default VPC if it has been deleted
   - Default VPC is always the same: 172.31.0.0/16
   - Always have the same predictable structure but this structure can't
     be changed which makes Default VPCs limited for any production
     deployments
   - Each Default VPC automatically gets the following security features
     which limit incoming and outgoing data transfer
     - Internet Gateway(IGW)
     - Security Group(SG)
     - Network Access Control List(NACL)
   - Anything placed in the Default VPC subnets is assigned a public IPv4
     address. This is an example of how some private services can be made
     public by projecting parts of themselves into the AWS public zone(see
     Public
    
      
** VPC CIDR
   - Defines the start and end IP range that a VPC can use
   - If anything needs to communicate with a VPC, and assuming
     you allow it, it needs to communicate to that VPC CIDR
   - Custom VPC can have multipe CIDR ranges whereas the VPC CIDR
     for the Default VPC is always the same: 172.31.0.0/16
   - The VPC CIDR is divide up so that each subned per AZ gets
     a slice of the CIDR range
     - A /20 subnet is created within each AZ within the region
     - 16 /20 subnets can be created from a /16 address. That means
       that the Default VPC CIDR can handle up to 16 AZs

** Custom VPC
   - Multiple VPCs per region
   - Can be configured how you want, so long as you stay within the
   - rules and limits of VPC
   - Require the user to configure them end-to-end and are private
     by default
   - Can be configured for exactly how you need
     - variety of sizes and structures
     - they can be linked with other VPCs
     - can be configured to communicate with other cloud platforms
       and your on-premises networks

** Default VPC
   - 1 Default VPC per region
   - Initially configured by AWS
   - Come pre-configured in a very specific way and all the networking
     configuration is handled by AWS
     - Because of this they are a lot less flexible than custom VPCs


* Elastic Compute Cloud (EC2)
** EC2 Facts
  - Provides access to virtual machines called instances
  - Infrastructure as a Service (IAAS)
    - Unit of consumption is the instance
  - Instance: An operation system configured in a certain way
    with a certain set of allocated resources
  - EC2 is a private service
    - It runs in the private AWS zone
    - Instances are launched within a single VPC subnet
    - It must be configured with public access due to it being a
      private service. This is done by putting it in a VPC subnet that
      supports VPC access. The default VPC supports this out of the
      box. Custom VPCs need to be configured
  - EC2 is AZ Resilient
    This is evident since it is launched within a specific subnet
    and subnets are are availability zones
  - On-demand billing per-second or per-hour based on the service
    consumed

** Instance charges
   - Running an instance (CPU and memory usage) 
   - Storage
   - Extras for any commercial software the instances is launched with

** Storage
   Instances can use a number of different storage. Two of which are
   - storage that's on the local hose
   - Elastic Block Storage(EBS)

** Instance Lifecycle
   States
   - Running
   - Stopped
   - Terminated
      
   | State      | CPU | Memory | Storage | Networking |
   |------------+-----+--------+---------+------------|
   | Running    | X   | X      | X       | X          |
   | Stopped    |     |        | X       |            |
   | Terminated |     |        |         |            |

** Amazon Machine Image (AMI)
   - An AMI can create an EC2 instance and,
   - An AMI can be created /from/ an EC2 instance

   An AMI contains
   - Permissions: Control which accounts can use the AMI
   - Public: Everyone is allowed to launch instances from that AMI
   - Owner: Implicitly allowed to create EC2 instance from the AMI
   - Explicit: Owner specifies which /AWS accounts/ have access to
      the AMI
   - Root Volume: boot volume for the instance along with any other
     drives
   - Block Device Mapping: configuration which maps the drives to the
     device ID

** Connecting to EC2
   - Windows - RDP =port: 3389=
   - Linux - SSH =port: 22=



* Simple Storage Service (S3)
  - Global storage platform
  - Regionally Resilient: Data is replicated across availability
     zones within that region
  - Runs from the AWS Public Service
  - It can cope with unlimited data
  - Designed for multi-user usage
  - Two main things it delivers
    - Objects
    - Buckets
  - S3 is an object store, not a file or block store
  - Input and/or output to many AWS prodcut
  

* CloudFormation (CFN)

  - CloudFormation is a tool that lets you create, update, and delete
    infrastructure in AWS in a consistent and repeatable way using
    templates
  - Written in YAML or JSON
  - All templates must have a Resource key with at least one element
    - The Resource section is what dictates what is created, updated,
      and deleted
  - If the =AWSTemplateFormatVersion= and =Description= sections both
    exist then =Description= must be immediately after the
    =AWSTemplateFormationVersion=
  - Resources inside a CloudFormation template are called Logical
    Resources. They contain
    - Type
      (ex. =AWS::EC2::Instance=)
    - Properties
      Used to configure the resource in a certain way
  - A Stack is whats created when CloudFormation runs a template
  - 1 or more Stacks can be created from a single Template
  - For any logical resources in the stack, CloudFormation makes a
    corresponding physical resource in your AWS account
  - CloudFormation's job is to keep the logical and physical
    resources in sync

** Benefits
   - Consistently repeatable automatic provisioning
   - It cleans up after itself. When you delete a Stack CF deletes the
     logical resources and then deletes the associated physical
     resources
   - Portable. Well-designed templates can be used in any AWS region


* CloudWatch

  - CloudWatch :: An AWS public service that collects and manages
    operational data

  CloudWatch consists of three main products
  1. CloudWatch - Metrics
  2. CloudWatch Logs
  3. CloudWatch Events
  
  - Namespaces :: Used to keep data organized
    - AWS reserves the =AWS/...= namespace (ex. =AWS/EC2=)   
  - Metric :: A collection of related data points in a time-orderd
    structure
  - Datapoints :: consist of a timestamp (=2019-12-03T08:45:45Z=) and
    a value (=98.3=)
  - Dimensions :: Separate datapoints for different /things/ or
    /perspectives/ within the same metric
  - Alarms :: The service that allows actions to be configured /based
    on/ metrics
    - Three states: Ok, Alarm, Insufficent Data

* Route53
